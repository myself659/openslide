{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"p",
				"Println	n int, err error ƒ"
			],
			[
				"get",
				"geturl	 ƒ"
			],
			[
				"g_",
				"g_exit	bool ν"
			],
			[
				"c",
				"Contains	bool ƒ"
			],
			[
				"f",
				"fetchdxhttp	 ƒ"
			],
			[
				"x",
				"xqurl	string ν"
			],
			[
				"s",
				"strconv	 package ρ"
			],
			[
				"t",
				"TrimFunc	string ƒ"
			],
			[
				"http",
				"httpsurl	string ν"
			],
			[
				"htt",
				"httpsurl	string ν"
			],
			[
				"url",
				"urls	[]string ν"
			],
			[
				"ur",
				"urls	[]string ν"
			],
			[
				"d",
				"DealTime	int ν"
			],
			[
				"u",
				"UnitPrice	uint32 ν"
			],
			[
				"sp",
				"Sprintf	string ƒ"
			],
			[
				"T",
				"TagPrice	float64 ν"
			],
			[
				"Pr",
				"ParseFloat	float64, error ƒ"
			],
			[
				"str",
				"strconv	 package ρ"
			],
			[
				"e",
				"Eq	*goquery.Selection ƒ"
			],
			[
				"ta",
				"taglen	int ν"
			],
			[
				"pr",
				"Println	n int, err error ƒ"
			],
			[
				"xq",
				"xqlist	[]xqinfo ν"
			],
			[
				"F",
				"Find	*goquery.Selection ƒ"
			],
			[
				"w",
				"Writer	*csv.Writer ν"
			],
			[
				"in",
				"initlog	error ƒ"
			],
			[
				"xiaoqu",
				"xiaoqupagedoc	 ƒ"
			],
			[
				"a",
				"areaurl	string ν"
			],
			[
				"di",
				"District	string ν"
			],
			[
				"xi",
				"xiaoqupage	 ƒ"
			],
			[
				"ar",
				"area	string ν"
			],
			[
				"fin",
				"FindString	string ƒ"
			],
			[
				"er",
				"erhurl	string ν"
			],
			[
				"cj",
				"cjurl	string ν"
			],
			[
				"lis",
				"lislen	int ν"
			],
			[
				"r",
				"NewDocumentFromResponse	*goquery.Document, error ƒ"
			],
			[
				"st",
				"starteara	bool ƒ"
			],
			[
				"C",
				"CfgInfo	struct ʈ"
			],
			[
				"cs",
				"csvencode	csvdata.Encoder ν"
			],
			[
				"csv",
				"csvdata	 package ρ"
			],
			[
				"err",
				"errors	 package ρ"
			],
			[
				"L",
				"Logger	struct ʈ"
			],
			[
				"log",
				"logrus	 package ρ"
			],
			[
				"D",
				"Debugf	 ƒ"
			],
			[
				"deb",
				"Debugln	 ƒ"
			],
			[
				"E",
				"Errorln	 ƒ"
			],
			[
				"De",
				"Debugln	 ƒ"
			],
			[
				"wi",
				"WithField	*logrus.Entry ƒ"
			],
			[
				"set",
				"SetOutput	 ƒ"
			],
			[
				"Trims",
				"TrimSuffix	string ƒ"
			],
			[
				"no",
				"Now	time.Time ƒ"
			],
			[
				"ci",
				"cityname	string ν"
			],
			[
				"P",
				"Println	n int, err error ƒ"
			],
			[
				"Sp",
				"Sprintf	string ƒ"
			],
			[
				"k",
				"KeyItem	struct ʈ"
			],
			[
				"g_k",
				"g_keyindex	map[string]int ν"
			],
			[
				"tt",
				"ttitem	TTItem ν"
			],
			[
				"TT",
				"ttitem	TTItem ν"
			],
			[
				"g_key",
				"g_KeyItems	[]KeyItem ν"
			],
			[
				"g",
				"g_filterset	set.Interface ν"
			],
			[
				"n",
				"NewScanner	*bufio.Scanner ƒ"
			],
			[
				"GO",
				"GOMAXPROCS	int ƒ"
			],
			[
				"h",
				"h2span	*goquery.Selection ν"
			],
			[
				"b",
				"Block	string ν"
			],
			[
				"U",
				"URL	string ν"
			],
			[
				"db",
				"dbtablename	string ν"
			],
			[
				"var",
				"varchar(255"
			],
			[
				"end",
				"endtwo	 ν"
			],
			[
				"v",
				"Visits	int ν"
			],
			[
				"tr",
				"TrimSpace	string ƒ"
			],
			[
				"FIN",
				"FindAllString	[]string ƒ"
			],
			[
				"m",
				"MustCompile	*regexp.Regexp ƒ"
			],
			[
				"hou",
				"houseInfoitems	[]string ν"
			],
			[
				"Tr",
				"TrimSpace	string ƒ"
			],
			[
				"fi",
				"Find	*goquery.Selection ƒ"
			],
			[
				"pa",
				"pageurls	[]string, err ƒ"
			],
			[
				"lin",
				"linkslen	int ν"
			],
			[
				"li",
				"linkslen	int ν"
			],
			[
				"i",
				"Intn	int ƒ"
			],
			[
				"ua",
				"ualen	int ν"
			],
			[
				"l",
				"Length	int ƒ"
			],
			[
				"re",
				"Response	struct ʈ"
			],
			[
				"new",
				"NewTimer	*time.Timer ƒ"
			],
			[
				"en",
				"enType"
			],
			[
				"TI",
				"TIMER_TYPE_CYCLE"
			],
			[
				"_P",
				"_pppContainer"
			],
			[
				"pp",
				"ppTimerHash"
			],
			[
				"uiT",
				"_uiTicks"
			],
			[
				"size",
				"sizeof"
			]
		]
	},
	"buffers":
	[
		{
			"file": "dht/dht.slide",
			"settings":
			{
				"buffer_size": 358,
				"line_ending": "Windows"
			}
		},
		{
			"file": "bitcoin/bitcoin.slide",
			"settings":
			{
				"buffer_size": 3329,
				"line_ending": "Windows"
			}
		},
		{
			"file": "golang-startup/golang-startup.slide",
			"settings":
			{
				"buffer_size": 3393,
				"line_ending": "Windows"
			}
		},
		{
			"file": "dive-ipfs/dive-ipfs.slide",
			"settings":
			{
				"buffer_size": 5517,
				"line_ending": "Windows"
			}
		},
		{
			"file": "blockchain/blockchain.slide",
			"settings":
			{
				"buffer_size": 828,
				"line_ending": "Windows"
			}
		},
		{
			"file": "blockchain/blockchain develop .slide",
			"settings":
			{
				"buffer_size": 424,
				"line_ending": "Windows"
			}
		},
		{
			"file": "dive-ipfs/dive-ipfs-1.slide",
			"settings":
			{
				"buffer_size": 5833,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Program Files/sublime text/Data/Packages/GoSublime/CHANGELOG.md",
			"settings":
			{
				"buffer_size": 40183,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bitcoin/bitcoin-economy.slide",
			"settings":
			{
				"buffer_size": 345,
				"line_ending": "Windows"
			}
		},
		{
			"file": "eth/eth.slide",
			"settings":
			{
				"buffer_size": 123,
				"line_ending": "Windows"
			}
		},
		{
			"file": "iota/iota.slide",
			"settings":
			{
				"buffer_size": 805,
				"line_ending": "Windows"
			}
		},
		{
			"file": "hashgraph/hashgraph.slide",
			"settings":
			{
				"buffer_size": 2072,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Golang Build/Go.sublime-build",
					""
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Run"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Test"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Install"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Cross-Compile (Interactive)"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Clean"
				],
				[
					"Packages/GoTools/GoTools.sublime-build",
					""
				],
				[
					"Packages/GoTools/GoTools.sublime-build",
					"Build"
				],
				[
					"Packages/GoTools/GoTools.sublime-build",
					"Clean Build"
				],
				[
					"Packages/GoTools/GoTools.sublime-build",
					"Run Tests"
				],
				[
					"Packages/GoTools/GoTools.sublime-build",
					"Run Tagged Tests"
				],
				[
					"Packages/GoTools/GoTools.sublime-build",
					"Run Test at Cursor"
				],
				[
					"Packages/GoTools/GoTools.sublime-build",
					"Run Current Package Tests"
				],
				[
					"Packages/GoTools/GoTools.sublime-build",
					"Run Last Test"
				],
				[
					"Packages/GoSublime/GoSublime.sublime-build",
					""
				]
			],
			[
				"Packages/Golang Build/Go.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"pcic",
				"Package Control: Install Package"
			],
			[
				"pcrp",
				"Package Control: Remove Package"
			],
			[
				"markdwon p",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdon",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mardonw",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markmon launch"
			],
			[
				"mar",
				"Markmon launch"
			],
			[
				"m",
				"Markmon launch"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"mport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/openslides",
		"/E/openslides/bitcoin",
		"/E/openslides/blockchain",
		"/E/openslides/blockchain/images",
		"/E/openslides/dive-ipfs",
		"/E/openslides/golang-startup"
	],
	"file_history":
	[
		"/D/Program Files/sublime text/Data/Packages/Default/Preferences.sublime-settings",
		"/E/Go/Code/src/github.com/myself659/openslides/hashgraph/hashgraph.slide",
		"/E/Go/Code/src/github.com/myself659/golab/chandefaultblock.go",
		"/E/Go/Code/src/github.com/myself659/lj-er/hz.md",
		"/E/Go/Code/src/github.com/myself659/ljxq/city/bj/北京-erh-2017-06-04.txt",
		"/E/Go/Code/src/github.com/myself659/lianjia-xiaoqu/bj-cjxq.csv",
		"/E/Go/Code/src/github.com/myself659/ljxq/city/北京-2017-05-28.txt",
		"/E/Go/Code/src/github.com/myself659/ljxq/xiaoquer.go",
		"/E/Go/Code/src/github.com/myself659/ljxq/fetch.go",
		"/E/Go/Code/src/github.com/myself659/ljxq/init.go",
		"/E/Go/Code/src/github.com/myself659/ljxq/common.go",
		"/E/Go/Code/src/github.com/myself659/golang-basic/src/chndiret.go",
		"/E/Go/Code/src/github.com/myself659/golang-basic/step10.go",
		"/E/Go/Code/src/github.com/myself659/lianjia-xiaoqu/collector/collector.go",
		"/E/Go/Code/src/github.com/myself659/openslides/webserver/webserver.slide",
		"/E/Go/Code/src/github.com/myself659/openslides/webserver/webserver-2.slide",
		"/E/Go/Code/src/github.com/myself659/lianjia-xiaoqu/bj.go",
		"/E/Go/Code/src/github.com/myself659/ljxq/package xiaoqucj.go",
		"/E/Go/Code/src/github.com/myself659/ljxq/xiaoqu.go",
		"/E/Go/Code/src/github.com/myself659/toutiao/readme.md",
		"/E/Go/Code/src/github.com/myself659/lj-er/beijing-2017-05-20.log",
		"/E/Go/Code/src/github.com/myself659/hdr/application/application.go",
		"/E/Go/Code/src/github.com/myself659/lj-er/beijing-2017-05-20.txt",
		"/E/Go/Code/src/github.com/myself659/xiciproxy/xiciproxy.go",
		"/E/Go/Code/src/github.com/myself659/openslides/How to build high performance web server/high performance web server.slide",
		"/E/Go/Code/src/github.com/myself659/ChanBroker/ChanBroker.go",
		"/E/Go/Code/src/github.com/myself659/cyclebuffer/example/demo.go",
		"/E/Go/Code/src/github.com/myself659/httpproxy/xici.go",
		"/E/Go/Code/src/github.com/myself659/httpproxy/mysqlget.go",
		"/E/Go/Code/src/github.com/myself659/httpproxy/proxyget.go",
		"/E/Go/Code/src/github.com/myself659/xiciproxy/test.go",
		"/E/Go/Code/src/github.com/myself659/httpproxy/httpproxy.go",
		"/D/Program Files (x86)/sublime text/Data/Packages/GoSublime/GoSublime.sublime-settings",
		"/E/Go/Code/src/github.com/myself659/golang-basic/changtype.gp",
		"/E/Go/Code/src/github.com/myself659/lianjia-xiaoqu/bj.txt",
		"/E/Go/Code/src/github.com/myself659/lianjia-xiaoqu/cd.txt",
		"/E/Go/Code/src/github.com/myself659/lianjia-xiaoqu/tj.txt",
		"/E/Go/Code/src/github.com/myself659/golang-basic/panic/neverexitgoroutine.go",
		"/E/Go/Code/src/github.com/myself659/ChanBroker/example/demo.go",
		"/E/Go/Code/src/github.com/myself659/myself659.sublime-project",
		"/E/Go/Code/src/github.com/myself659/gostocks/sos.txt",
		"/D/PC-Soft/netpoll.go",
		"/D/Program Files (x86)/sublime text/Data/Packages/User/golang.sublime-settings",
		"/D/Program Files (x86)/sublime text/Data/Packages/User/Preferences.sublime-settings",
		"/D/Program Files (x86)/sublime text/Data/Packages/GoGuru/Default.sublime-settings",
		"/D/Program Files (x86)/sublime text/Data/Packages/User/GoGuru.sublime-settings",
		"/E/C++/cpp/timer/test.cpp",
		"/E/C++/cpp/rbtree/rbtree.hpp",
		"/E/C++/cpp/vectors.cpp",
		"/E/C++/cpp/refproject.txt",
		"/E/C++/cpp/ostream.cpp",
		"/E/C++/cpp/quicksort.c",
		"/E/Go/Code/go.sublime-project",
		"/D/Program Files (x86)/sublime text/Data/Packages/GoSublime/USAGE.md",
		"/D/Program Files (x86)/sublime text/Data/Packages/GoSublime/CHANGELOG.md",
		"/E/C++/cpp/test.go",
		"/D/Program Files (x86)/sublime text/Data/Packages/GoSublime/README.md",
		"/D/Program Files (x86)/sublime text/Data/Packages/Default/Preferences.sublime-settings",
		"/D/Program Files (x86)/sublime text/Data/Packages/User/GoSublime.sublime-settings",
		"/E/Blog/github-blog/blog.sublime-project",
		"/G/C++/cpp/cpp.sublime-project",
		"/G/C++/cpp/cpp.sublime-workspace",
		"/D/SublimeText3/Data/Packages/GoSublime/USAGE.md",
		"/E/Blog/github-blog/系统开发一些总结.md",
		"/E/Blog/github-blog/china trend.md",
		"/E/Blog/github-blog/reading the house of cards.md",
		"/E/Blog/github-blog/个人反思.md",
		"/E/Blog/github-blog/epoll prime.md",
		"/D/SublimeText3/Data/Packages/GoSublime/GoSublime.sublime-settings",
		"/E/Blog/github-blog/redis设计学习.md",
		"/E/Blog/github-blog/linux sched.md",
		"/E/Blog/github-blog/linux  top.md",
		"/E/C++/cpp/friendclass.cpp",
		"/E/Blog/github-blog/ioblog/_posts/2015-08-28-gdb-command-example.md",
		"/E/Blog/github-blog/计算机通信的演变.md",
		"/E/C++/cpp/cpp.sublime-workspace",
		"/E/C++/cpp/cpp.sublime-project",
		"/E/Blog/github-blog/ioblog/blog.sublime-project",
		"/E/Blog/github-blog/k line learn.md",
		"/E/Blog/github-blog/ioblog/_posts/2015-07-28-linux-netstat.md",
		"/E/Blog/github-blog/ioblog/_posts/2015-05-24-linux-perf-droppacket.md",
		"/E/Blog/github-blog/ioblog/_posts/2015-07-03-thought-about-zero-to-one.md",
		"/E/Blog/github-blog/ioblog/_posts/2015-05-24-linux-perf-tips-nobranchmiss.md",
		"/E/Blog/github-blog/ioblog/_posts/2015-05-24-c-codereivew.md",
		"/E/Blog/github-blog/ioblog/_posts/2015-06-01-linux-may-sleep-function.md",
		"/D/TDDOWNLOAD/goagent/local/proxy.pac",
		"/E/Blog/github-blog/ioblog/_posts/2015-08-08-nginx-pratice-1-add-hello-module.md",
		"/E/Blog/github-blog/2014-2015安全问题思考.md",
		"/E/C++/cpp/hellost.cpp",
		"/E/C++/cpp/observer.cpp",
		"/D/SublimeText3/Data/Packages/User/Preferences.sublime-settings",
		"/D/SublimeText3/Data/Packages/MarkdownEditing/README.md",
		"/E/Blog/github-blog/sublime 插件总结",
		"/E/Blog/github-blog/gdb  core  without debugging symbol.md",
		"/D/SublimeText3/Data/Packages/sublime-text-markmon/sublime-text-markmon.sublime-settings",
		"/D/SublimeText3/Data/Packages/sublime-text-markmon/Default (Windows).sublime-keymap",
		"/D/SublimeText3/Data/Packages/User/Default (Windows).sublime-keymap",
		"/D/SublimeText3/Data/Packages/GoSublime/settings/GoSublime-Go.sublime-settings",
		"/D/SublimeText3/Data/Packages/User/GoSublime.sublime-settings",
		"/D/SublimeText3/Data/Packages/Package Control/Package Control.sublime-settings",
		"/D/SublimeText3/Data/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/D/SublimeText3/Data/Packages/User/Package Control.sublime-settings",
		"/D/SublimeText3/Data/Packages/GoSublime/CHANGELOG.md"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"E:\\C++\\cpp"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"no attr page-data",
			"fetch",
			"	\"",
			"\"\n",
			"\")\n",
			"}\n",
			"启动代理",
			")\n",
			"DealDate",
			"cjurl",
			"\")\n",
			"area",
			"/\")\n",
			"District",
			"\"http://bj.lianjia.com/ershoufang/chaoyang/pg7",
			"\"http://bj.lianjia.com/ershoufang/chaoyang/pg",
			"http://bj.lianjia.com/ershoufang/shijingshan/pg",
			"urls len",
			"pinfo",
			"http://bj.lianjia.com/ershoufang/xicheng/pg",
			")\n",
			"fmt",
			")\n",
			"	\n",
			"mahonia",
			")\n",
			"()\n",
			"pageurls",
			"page",
			"fetch",
			"BuildDate",
			"getfname",
			"insertnode",
			"timerch",
			"errTimeOut",
			"errBrokerExit",
			"tch",
			"		\n",
			"GOROOT",
			"goroot",
			"_pVector",
			"_pContainer",
			");\n",
			"_uiSize",
			"_uiTimeTick",
			"_uiTicks",
			"goroot"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			" \n",
			"timerchan",
			"ErrPublishTimeOut",
			"ErrBrokerExit",
			"timerch",
			"_ppVector",
			"_pppContainer",
			"_uiHashSize",
			"_uiTimePerTick",
			"_uiTicksPerCycle"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "dht/dht.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 358,
						"regions":
						{
						},
						"selection":
						[
							[
								352,
								352
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 195.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "bitcoin/bitcoin.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3329,
						"regions":
						{
						},
						"selection":
						[
							[
								1227,
								1227
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 3421.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "golang-startup/golang-startup.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3393,
						"regions":
						{
						},
						"selection":
						[
							[
								1023,
								1023
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 8605.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "dive-ipfs/dive-ipfs.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5517,
						"regions":
						{
						},
						"selection":
						[
							[
								386,
								386
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 10195.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "blockchain/blockchain.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 828,
						"regions":
						{
						},
						"selection":
						[
							[
								825,
								825
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 3896.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "blockchain/blockchain develop .slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 424,
						"regions":
						{
						},
						"selection":
						[
							[
								264,
								264
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 476.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "dive-ipfs/dive-ipfs-1.slide",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 5833,
						"regions":
						{
						},
						"selection":
						[
							[
								5501,
								5542
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 11974.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/D/Program Files/sublime text/Data/Packages/GoSublime/CHANGELOG.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40183,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete": false,
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/MarkdownEditing/Markdown.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "bitcoin/bitcoin-economy.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 345,
						"regions":
						{
						},
						"selection":
						[
							[
								108,
								108
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1434.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "eth/eth.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 123,
						"regions":
						{
						},
						"selection":
						[
							[
								123,
								123
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "iota/iota.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 805,
						"regions":
						{
						},
						"selection":
						[
							[
								391,
								391
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1008.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "hashgraph/hashgraph.slide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2072,
						"regions":
						{
						},
						"selection":
						[
							[
								2072,
								2072
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 4607.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GoGuru Output":
	{
		"height": 130.0
	},
	"output.GoSublime-main-output":
	{
		"height": 172.0
	},
	"output.exec":
	{
		"height": 130.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.golang_build":
	{
		"height": 225.0
	},
	"output.gotools_syntax_errors":
	{
		"height": 139.0
	},
	"pinned_build_system": "",
	"project": "openslides.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"golab\\str\\stresc.go"
			],
			[
				"tt.go",
				"tt\\tt.go"
			],
			[
				"tt",
				"tt\\tt.go"
			],
			[
				"json",
				"json.go"
			],
			[
				"bj",
				"lj-er\\bj.go"
			],
			[
				"are",
				"ljxq\\area.go"
			],
			[
				"x",
				"ljxq\\xiaoqucj.go"
			],
			[
				"xiao",
				"ljxq\\xiaoquer.go"
			],
			[
				"dx",
				"dxproxy\\dxproxy.go"
			],
			[
				"hz",
				"lj-er\\hz.md"
			],
			[
				"lfc",
				"ljxq\\city\\lf\\lfcj.go"
			],
			[
				"xi",
				"xiciproxy\\xiciproxy.go"
			],
			[
				"xici",
				"xiciproxy\\xiciproxy.go"
			],
			[
				"cfg",
				"ljxq\\cfg.go"
			],
			[
				"xiaoquc",
				"ljxq\\xiaoqucj.go"
			],
			[
				"fmt",
				"golang-basic\\src\\strfmt.go"
			],
			[
				"get",
				"ljxq\\city\\bj\\getsum.go"
			],
			[
				"ar",
				"ljxq\\area.go"
			],
			[
				"hz.md",
				"lj-er\\hz.md"
			],
			[
				"coll",
				"lianjia-xiaoqu\\collector\\collector.go"
			],
			[
				"cd",
				"lianjia-xiaoqu\\cd.go"
			],
			[
				"city",
				"ljxq\\city.go"
			],
			[
				"area",
				"ljxq\\area.go"
			],
			[
				"bj.go",
				"lj-er\\bj.go"
			],
			[
				"init",
				"ljxq\\init.go"
			],
			[
				"log",
				"lj-er\\log.go"
			],
			[
				"reg",
				"golang-basic\\src\\regexp.go"
			],
			[
				"ex",
				"toutiao\\example.go"
			],
			[
				"chn",
				"golang-basic\\src\\chndiret.go"
			],
			[
				"chan",
				"golang-basic\\changtype.go"
			],
			[
				"map",
				"golab\\mapindex.go"
			],
			[
				"cmd",
				"golang-basic\\src\\cmdflag.go"
			],
			[
				"sli",
				"lj-er\\slice.go"
			],
			[
				"mysql",
				"golang-basic\\net\\proxy\\mysqlget.go"
			],
			[
				"str",
				"golang-basic\\src\\strfunc.go"
			],
			[
				"page",
				"lj-er\\page.go"
			],
			[
				"xicipr",
				"xiciproxy\\xiciproxy.go"
			],
			[
				"chanbo",
				"ChanBroker\\ChanBroker.go"
			],
			[
				"xico",
				"xiciproxy\\xiciproxy.go"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"E:\\C++\\cpp\\cpp.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 242.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
